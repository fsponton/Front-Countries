{"version":3,"sources":["redux/actionsBack.js","redux/actionsFront.js","components/CountryCard.jsx","components/Paging.jsx","components/Main.jsx","components/Nav.jsx","components/ActivityDetail.jsx","components/CountryDetail.jsx","components/ActivityForm.jsx","components/ActivityFormMultiple.jsx","App.js","reportWebVitals.js","redux/controllers/controllersReducer.js","redux/reducer.js","redux/store.js","index.js"],"names":["GET_ALL_COUNTRIES","GET_COUNTRY_BY_NAME","GET_COUNTRY_BY_ID","GET_ACTIVITIES","CREATE_ACTIVITY","getAllCountries","dispatch","axios","get","then","response","type","payload","data","catch","error","alert","getCountry","name","undefined","status","getCountriesBack","getActivities","createActivity","difficulty","duration","season","idCountries","review","post","parseInt","swal","GET_COUNTRIES_PER_CONTINENT","GET_COUNTRIES_PER_ACTIVITY","CHANGE_PAGE_NUMBER","ORDER_ALPHABETICALLY","CLEAN_FILTERS","ORDER_POPULATION","GET_ALL_ID_COUNTRIES","CHANGE_FLAG","CHANGE_FLAG_RESET","CHANGE_FLAG_ACTIVITY","getCountriesPerContinent","continent","getCountriesPerActivity","activity","changePageNumbers","cleanFilters","getallidCountries","changeFlag","boolean","changeFlagReset","changeFlagActivity","CountryCard","className","this","props","country","to","id","src","img","alt","React","Component","Paging","connect","state","pageNumbers","handleClick","selectedPage","map","number","onClick","Main","componentDidMount","updateCurrentPage","e","target","currentPage","max","Math","min","page","setState","Number","flag","flag2","console","log","pageOne","countriesPerPage","pageNumbersHome","flagReset","n","countriesFiltered","countries","indexOfLastAllCountries","indexOfFirstAllCountries","currentCountries","length","slice","index","flags","activities","Nav","useState","input","setInput","filter","setFilter","useDispatch","useSelector","activitiesFiltered","actividad","includes","push","nonRepeteadActivities","item","indexOf","useEffect","submitHandler","preventDefault","changeContinent","continentName","value","handlerChangeActivity","activityName","handlerChangeAlphabetically","handlerChangePopulation","onSubmit","placeholder","onChange","event","style","color","htmlFor","option","ActivityDetail","handlerDelete","promise","idCountry","delete","deleteActivity","redirection","Provider","size","bind","CountryDetail","match","params","getCountryById","componentDidUpdate","flagActivity","handlerFlag","clean","capital","subregion","area","population","ActivityForm","handlerClean","namesCountries","handlerReview","handlerChangeName","handlerChange","handlerSubmit","nameCountry","arrDuration","i","required","ActivityFormMultiple","handlerAddCountry","handlerDeleteCountry","countriesNames","storeIdCountries","allCountries","clearFilters","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","arrCountriesByContinent","paises","countriesByActivity","nameCountries","j","flagForNames","arrPagesNumber","arrPageNumbers","ceil","arrAlphabetically","stringOrder","arr","sort","country1","country2","orderByName","reverse","arrPopulation","arrIdCountries","initialState","Array","from","_","rootReducer","action","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.eddc3c4c.chunk.js","sourcesContent":["import axios from 'axios'\r\nimport swal from 'sweetalert';\r\nexport const GET_ALL_COUNTRIES = \"GET_ALL_COUNTRIES\";\r\nexport const GET_COUNTRY_BY_NAME = \"GET_COUNTRY_BY_NAME\";\r\nexport const GET_COUNTRY_BY_ID = \"GET_COUNTRY_BY_ID\";\r\nexport const GET_ACTIVITIES = \"GET_ACTIVITIES\";\r\nexport const CREATE_ACTIVITY = \"CREATE_ACTIVITY\";\r\n\r\n\r\nexport const getAllCountries = () => {\r\n    return function (dispatch) {\r\n        return axios\r\n            .get(`https://api-countries-np9g.onrender.com/countries`)\r\n            .then((response) => {\r\n                dispatch({\r\n                    type: GET_ALL_COUNTRIES,\r\n                    payload: response.data\r\n                })\r\n            })\r\n            .catch((error) =>\r\n                alert(\"EROR_NETWORK\")\r\n            )\r\n    }\r\n}\r\n\r\nexport const getCountry = (name) => {\r\n    return function (dispatch) {\r\n        return axios\r\n            .get(`https://api-countries-np9g.onrender.com/countries?name=${name}`)\r\n            .then((response) => {\r\n                dispatch({ type: GET_COUNTRY_BY_NAME, payload: response.data })\r\n            })\r\n            .catch((error) => {\r\n                if (error.response === undefined) { alert('No internet connection') }\r\n                if (error.response.status === 400) { alert(`Country with name: ${name} does not exist`) }\r\n            })\r\n    }\r\n}\r\n\r\nexport const getCountriesBack = (name) => {\r\n    return axios\r\n        .get(`https://api-countries-np9g.onrender.com/countries?name=${name}`)\r\n        .then((response) => {\r\n            return response.data\r\n        })\r\n        .catch((error) => {\r\n            if (error.response === undefined) { alert('No internet connection') }\r\n            if (error.response.status === 400) { alert(`Country with name: ${name} does not exist`) }\r\n        })\r\n}\r\n\r\nexport const getCountryById = (idCountry) => {\r\n    return function (dispatch) {\r\n        return axios\r\n            .get(`https://api-countries-np9g.onrender.com/countries/${idCountry}`)\r\n            .then((response) => {\r\n\r\n                dispatch({ type: GET_COUNTRY_BY_ID, payload: response.data })\r\n                return response.data\r\n            })\r\n            .catch((error) => {\r\n                if (error.response === undefined) { alert('No internet connection') }\r\n                if (error.response.status === 400) { alert(`Country with id: ${idCountry} does not exist`) }\r\n            })\r\n    }\r\n}\r\n\r\nexport const getActivities = () => {\r\n    return function (dispatch) {\r\n        return axios\r\n            .get(`https://api-countries-np9g.onrender.com/activities`)\r\n            .then((response) => {\r\n                dispatch({ type: GET_ACTIVITIES, payload: response.data })\r\n            })\r\n    }\r\n}\r\n\r\nexport const createActivity = ({ name, difficulty, duration, season, idCountries, review }) => {\r\n    return function (dispatch) {\r\n        return axios\r\n            .post(`https://api-countries-np9g.onrender.com/activities`, {\r\n                name,\r\n                difficulty: parseInt(difficulty),\r\n                duration: parseInt(duration),\r\n                season,\r\n                idCountries,\r\n                review\r\n            })\r\n\r\n            .then((response) => {\r\n                if (!response.data[0][1]) {\r\n                    swal(`La actividad ya se encuentra registrada`, `\"${name}\"`, \"error\")\r\n\r\n                } else {\r\n                    dispatch({\r\n                        type: CREATE_ACTIVITY,\r\n                        payload: response.data\r\n                    })\r\n                    swal(`Se creo la actividad`, `\"${name}\"`, \"success\")\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                if (error.response.data) { alert(\"Faltan datos\") }\r\n            })\r\n\r\n    }\r\n}\r\n\r\nexport function deleteActivity(idCountry, id, name) {\r\n    return axios.delete(`http://api-countries-np9g.onrender.com/activities/${idCountry}/${id}`)\r\n        .then((response) => {\r\n            if (response.data) {\r\n                swal(`Activity delete`, `\"${name}\"`, \"success\")\r\n                return response.data\r\n            }\r\n            else {\r\n                swal(`An error occurred while deleting`, `\"${name}\"`, \"error\")\r\n\r\n            }\r\n        })\r\n}\r\n\r\n\r\n\r\n","\r\nexport const GET_COUNTRIES_PER_CONTINENT = \"GET_COUNTRIES_PER_CONTINENT\"\r\nexport const GET_COUNTRIES_PER_ACTIVITY = \"GET_COUNTRIES_PER_ACTIVITY\"\r\nexport const CHANGE_PAGE_NUMBER = \"CHANGE_PAGE_NUMBER\"\r\nexport const ORDER_ALPHABETICALLY = \" ORDER_ALPHABETICALLY\"\r\nexport const CLEAN_FILTERS = \" CLEAN_FILTERS\"\r\nexport const ORDER_POPULATION = \"ORDER_POPULATION\"\r\nexport const GET_ALL_ID_COUNTRIES = \"GET_ALL_ID_COUNTRIES\"\r\nexport const CHANGE_FLAG = \"CHANGE_FLAG\"\r\nexport const CHANGE_FLAG_RESET = \"CHANGE_FLAG_RESET\"\r\nexport const CHANGE_FLAG_ACTIVITY = \"CHANGE_FLAG_ACTIVITY\"\r\n\r\n\r\nexport const getCountriesPerContinent = (continent) => {\r\n    return { type: GET_COUNTRIES_PER_CONTINENT, payload: continent }\r\n}\r\n\r\nexport const getCountriesPerActivity = (activity) => {\r\n    return { type: GET_COUNTRIES_PER_ACTIVITY, payload: activity }\r\n}\r\n\r\nexport const changePageNumbers = () => {\r\n    return { type: CHANGE_PAGE_NUMBER }\r\n}\r\n\r\nexport const atozztoa = (order) => {\r\n    return { type: ORDER_ALPHABETICALLY, payload: order }\r\n}\r\n\r\nexport const orderPopulation = (order) => {\r\n    return { type: ORDER_POPULATION, payload: order }\r\n}\r\n\r\n\r\nexport const cleanFilters = () => {\r\n    return { type: CLEAN_FILTERS }\r\n}\r\n\r\n\r\nexport const getallidCountries = () => {\r\n    return { type: GET_ALL_ID_COUNTRIES }\r\n}\r\n\r\n\r\n\r\n\r\nexport const changeFlag = (boolean) => {\r\n    return { type: CHANGE_FLAG, payload: boolean }\r\n}\r\n\r\nexport const changeFlagReset = (boolean) => {\r\n    return { type: CHANGE_FLAG_RESET, payload: boolean }\r\n}\r\n\r\nexport const changeFlagActivity = (boolean) => {\r\n    return { type: CHANGE_FLAG_ACTIVITY, payload: boolean }\r\n}","import '../styles//CountryCard.css'\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nexport class CountryCard extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"countryCard d-flex flex-column align-items-center\">\r\n                <h3>{this.props.country}</h3>\r\n                <Link to={`/countries/${this.props.id}`} >\r\n                    <img src={this.props.img} alt={`flag ${this.props.country}`} />\r\n                </Link>\r\n                <p>{this.props.continent}</p>\r\n            </div>\r\n        );\r\n    };\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        country: state.country\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(CountryCard);\r\n","import '../styles//Paging.css'\r\nimport React from \"react\";\r\n\r\nconst Paging = ({ pageNumbers, handleClick, selectedPage }) => {\r\n    // console.log(\"pagging\")\r\n    // console.log(pageNumbers)\r\n    // console.log(selectedPage)\r\n    return (\r\n\r\n        <>\r\n            {pageNumbers?.map(number => {\r\n                if (selectedPage === number) {\r\n                    return (\r\n                        < button className='btnPage btnActive btn btn-sm btn-outline-primary'\r\n                            id={number}\r\n                            key={number}\r\n                            onClick={handleClick}\r\n                        >\r\n                            {number}\r\n                        </button>\r\n                    );\r\n                }\r\n                return (\r\n                    < button className='btnPage btn btn-sm btn-outline-primary'\r\n                        id={number}\r\n                        key={number}\r\n                        onClick={handleClick}\r\n                    >\r\n                        {number}\r\n                    </button>\r\n                );\r\n\r\n            })\r\n            }\r\n\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default Paging;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import '../styles/Main.css';\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getAllCountries, getActivities } from '../redux/actionsBack';\r\nimport { cleanFilters, getallidCountries, changeFlag, changeFlagReset } from '../redux/actionsFront';\r\nimport { CountryCard } from './CountryCard';\r\nimport Paging from './Paging';\r\n\r\nclass Main extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            pageOne: 1,\r\n            currentPage: 1,\r\n            countriesPerPage: 9,\r\n            pageNumbersHome: this.props.pageNumbers,\r\n            selectedPage: 1,\r\n            flag2: false\r\n        };\r\n    };\r\n\r\n    componentDidMount = async () => {\r\n        await this.props.getAllCountries();\r\n        await this.props.getActivities();\r\n        await this.props.getallidCountries();\r\n    }\r\n\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.flag === false && this.state.flag2 === true) {\r\n            this.setState(() => {\r\n                return {\r\n                    currentPage: this.state.pageOne,\r\n                    selectedPage: this.state.pageOne,\r\n                    flag2: false\r\n                }\r\n            })\r\n        } else if (this.props.flag === true && this.state.flag2 === false) {\r\n            this.setState(() => {\r\n                return {\r\n                    currentPage: this.state.pageOne,\r\n                    selectedPage: this.state.pageOne,\r\n                    flag2: true\r\n                }\r\n            })\r\n        } else if (this.props.flag === false && this.state.flag2 === false && this.props.flagReset === true) {\r\n            this.props.changeFlagReset()\r\n            this.setState(() => {\r\n                return {\r\n                    currentPage: this.state.pageOne,\r\n                    selectedPage: this.state.pageOne\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    updateCurrentPage = (e) => {\r\n        const { name } = e.target;\r\n        const { currentPage } = this.state\r\n        const max = Math.max(...this.props.pageNumbers)\r\n        const min = Math.min(...this.props.pageNumbers)\r\n\r\n\r\n        if (name === \"next\") {\r\n            if (currentPage === max) {\r\n                return\r\n            }\r\n            let page = currentPage + 1\r\n            this.setState(() => {\r\n                return {\r\n                    currentPage: page,\r\n                    selectedPage: page\r\n                }\r\n            })\r\n        } else if (name === \"prev\") {\r\n            if (currentPage === min) {\r\n                return\r\n            }\r\n            let page = currentPage - 1\r\n            this.setState(() => {\r\n                return {\r\n                    currentPage: page,\r\n                    selectedPage: page\r\n                }\r\n            })\r\n        } else {\r\n            this.setState(() => {\r\n                return {\r\n                    currentPage: Number(e.target.id),\r\n                    selectedPage: Number(e.target.id)\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    updateCountriesPerPage(n) {\r\n        this.setState(() => {\r\n            return {\r\n                countriesPerPage: n\r\n            }\r\n        })\r\n    }\r\n\r\n    handleClick = async (e) => {\r\n        await this.updateCurrentPage(e);\r\n        if (this.props.flag === true && this.state.flag2 === false) {\r\n            console.log(this.state)\r\n            this.setState(() => {\r\n                return {\r\n                    currentPage: this.state.currentPage - (this.state.currentPage - 2),\r\n                    selectedPage: this.state.currentPage - (this.state.currentPage - 2),\r\n                    flag2: true\r\n                }\r\n            })\r\n            return\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { countriesFiltered, countries, pageNumbers } = this.props\r\n        const { countriesPerPage } = this.state\r\n        let { currentPage, selectedPage } = this.state\r\n\r\n        const indexOfLastAllCountries = currentPage * countriesPerPage;\r\n        const indexOfFirstAllCountries = indexOfLastAllCountries - countriesPerPage;\r\n\r\n        let currentCountries = []\r\n\r\n        countriesFiltered?.length > 0 ?\r\n            currentCountries = countriesFiltered\r\n            : currentCountries = countries\r\n\r\n\r\n\r\n        currentCountries = currentCountries.slice(indexOfFirstAllCountries, indexOfLastAllCountries);\r\n        return (\r\n            <>\r\n                <div className='countries row'>\r\n                    {(currentCountries[0] === \"No hay paises con esa actividad\") ?\r\n                        <div><p className='noCountries'>No hay paises con esa actividad en el continente filtrado</p></div> :\r\n                        currentCountries?.map(\r\n                            (country, index) =>\r\n                                <div key={index} className=\"col-lg-4  col-md-6 col-sm-6 \">\r\n                                    <CountryCard\r\n                                        id={country.id}\r\n                                        img={country.flags}\r\n                                        country={country.name}\r\n                                        continent={country.continent}\r\n                                        key={index}\r\n                                    />\r\n                                </div>\r\n                        )}\r\n                </div>\r\n                <div className='pagination mb-4 d-flex justify-content-center mt-3'>\r\n                    <button className='btn btn-sm btn-outline-primary' type='button' name=\"prev\" onClick={this.handleClick}>Prev</button>\r\n                    <Paging pageNumbers={pageNumbers} handleClick={this.handleClick} selectedPage={selectedPage} />\r\n                    <button className='btn btn-sm btn-outline-primary' type='button' name=\"next\" onClick={this.handleClick}>Next</button>\r\n                </div>\r\n            </>\r\n        );\r\n    };\r\n};\r\n\r\n//provider trae el store, con mapstate to props se pone el estado del store, que es una copia, en la props del componente\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        countries: state.countries,\r\n        countriesFiltered: state.countriesFiltered,\r\n        activities: state.activities,\r\n        pageNumbers: state.pageNumbers,\r\n        flag: state.flag,\r\n        flagReset: state.flagReset\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getAllCountries: () => dispatch(getAllCountries()),\r\n        getActivities: () => dispatch(getActivities()),\r\n        getallidCountries: () => dispatch(getallidCountries()),\r\n        cleanFilters: () => dispatch(cleanFilters()),\r\n        changeFlag: () => dispatch(changeFlag()),\r\n        changeFlagReset: () => dispatch(changeFlagReset())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Main);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import '../styles//Nav.css'\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getCountry, getCountriesBack, getActivities } from '../redux/actionsBack'\r\nimport { AiOutlineFilter } from 'react-icons/ai';\r\nimport { BsSortAlphaDownAlt, BsSortAlphaUpAlt, BsSortNumericDownAlt, BsSortNumericUpAlt } from \"react-icons/bs\"\r\nimport {\r\n    getCountriesPerContinent,\r\n    getCountriesPerActivity,\r\n    changePageNumbers,\r\n    cleanFilters,\r\n    orderPopulation,\r\n    atozztoa,\r\n    changeFlag,\r\n    changeFlagReset\r\n} from '../redux/actionsFront';\r\nimport { useEffect } from 'react';\r\n\r\n\r\nconst Nav = () => {\r\n    const [input, setInput] = React.useState({\r\n        name: \"\"\r\n    })\r\n\r\n    const [filter, setFilter] = React.useState({\r\n        continent: \"\",\r\n        activity: \"\"\r\n    })\r\n\r\n    const dispatch = useDispatch()\r\n    const activities = useSelector((state) => state.activities)\r\n    const countriesFiltered = useSelector((state) => state.countriesFiltered)\r\n    // const flag = useSelector((state) => state.flag)\r\n    const flagReset = useSelector((state) => state.flagReset)\r\n\r\n    let activitiesFiltered = []\r\n\r\n    activities.map((actividad) => {\r\n        if (!activitiesFiltered.includes(actividad)) return activitiesFiltered.push(actividad.name)\r\n        else { return false }\r\n    })\r\n\r\n    let nonRepeteadActivities = activitiesFiltered.filter((item, index) => {\r\n        return activitiesFiltered.indexOf(item) === index;\r\n    })\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(getActivities())\r\n    }, [dispatch])\r\n\r\n    const changeHandler = (event) => {\r\n        const { name, value } = event.target\r\n        setInput({\r\n            ...input,\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    const submitHandler = async (e) => {\r\n        e.preventDefault();\r\n        const { name } = input\r\n        if (!name) { alert(\"Please insert a name\") }\r\n        dispatch(getCountry(name))\r\n        dispatch(changePageNumbers(await getCountriesBack(name)))\r\n    }\r\n\r\n    const changeContinent = async (e) => {\r\n        const continentName = e.target.value\r\n        const { activity } = filter\r\n        setFilter({ ...filter, continent: continentName })\r\n        if (activity) { setFilter({ ...filter, activity: \"\" }) }\r\n        dispatch(getCountriesPerContinent(continentName))\r\n        dispatch(changePageNumbers(countriesFiltered))\r\n        setFilter({ ...filter, activity: \"\" })\r\n        setFilter({ ...filter, continent: \"\" })\r\n        dispatch(changeFlag(true))\r\n    }\r\n\r\n\r\n    const handlerChangeActivity = async (e) => {\r\n        const activityName = e.target.value\r\n        const { continent, activity } = filter\r\n\r\n        //no existe continente filtra por actividad\r\n        if (!continent) {\r\n            setFilter({ ...filter, activity: activityName })\r\n            dispatch(cleanFilters())\r\n            dispatch(getCountriesPerActivity(activityName))\r\n        }\r\n        if (continent && !activity) {\r\n            dispatch(getCountriesPerContinent(continent))\r\n            dispatch(getCountriesPerActivity(activityName))\r\n        }\r\n        //existe continente y existe actividad\r\n        if (continent & activity) {\r\n            dispatch(getCountriesPerContinent(continent))\r\n            dispatch(getCountriesPerActivity(activityName))\r\n            setFilter({ ...filter, activity: \"\" })\r\n            setFilter({ ...filter, continent: \"\" })\r\n        }\r\n        dispatch(changePageNumbers(countriesFiltered))\r\n    }\r\n\r\n\r\n\r\n    const handlerCleanFilters = () => {\r\n        setFilter({ ...filter, activity: \"\" })\r\n        setFilter({ ...filter, continent: \"\" })\r\n        setFilter({ ...input, name: \"\" })\r\n        dispatch(cleanFilters())\r\n\r\n        if (!flagReset) {\r\n            return dispatch(changeFlagReset(true))\r\n        }\r\n\r\n    }\r\n\r\n    const handlerChangeAlphabetically = (e) => {\r\n        e.preventDefault();\r\n        const { value } = e.target\r\n        dispatch(atozztoa(value))\r\n    }\r\n\r\n    const handlerChangePopulation = (e) => {\r\n        e.preventDefault();\r\n        const { value } = e.target\r\n        dispatch(orderPopulation(value))\r\n        dispatch(changePageNumbers(countriesFiltered))\r\n    }\r\n\r\n    return (\r\n\r\n\r\n        < div className='' >\r\n            < form className=\"searchCountry m-1 mt-3 mb-2\" onSubmit={submitHandler} >\r\n                <input type=\"text\" name=\"name\" className='form-control form-control-sm' placeholder='Search Country' value={input.name} onChange={changeHandler}></input>\r\n            </form >\r\n            <div className='row justify-content-center mb-4'>\r\n                <button className='col-lg-4 col-sm-5 btn btn-sm btn-outline-light m-1'> <Link to=\"/createMultipleActivity\">Create Activity</Link></button>\r\n                <button className='col-lg-4 col-sm-5 btn  btn-sm  btn-outline-light m-1' type=\"reset\" onClick={handlerCleanFilters}>Clear Filters</button>\r\n            </div>\r\n            <div className='filterContinent mb-3'>\r\n                <div> <label className='h2 ms-1'>CONTINENT </label> <AiOutlineFilter style={{ color: \"#e6f3ff\" }} className=\"ms-1\" /></div>\r\n\r\n                <button className='btn btnContinent btn-sm btn-outline-light m-1' name=\"continent\" id=\"North America\" value=\"North America\" onClick={changeContinent}>North America</button>\r\n\r\n                <button className='btn btnContinent btn-sm btn-outline-light m-1' name=\"continent\" id=\"South America\" value=\"South America\" onClick={changeContinent}> South America</button>\r\n\r\n                <button className='btn btnContinent btn-sm btn-outline-light m-1' name=\"continent\" id=\"Antarctica\" value=\"Antarctica\" onClick={changeContinent}>Antarctica</button>\r\n\r\n                <button className='btn btnContinent btn-sm btn-outline-light m-1' name=\"continent\" id=\"Africa\" value=\"Africa\" onClick={changeContinent}>Africa </button>\r\n\r\n                <button className='btn btnContinent btn-sm btn-outline-light m-1' name=\"continent\" id=\"Europe\" value=\"Europe\" onClick={changeContinent}> Europe </button>\r\n\r\n                <button className='btn btnContinent btn-sm btn-outline-light m-1' name=\"continent\" id=\"Oceania\" value=\"Oceania\" onClick={changeContinent}>Oceania </button>\r\n            </div>\r\n            <div>\r\n                <div className='filterActivities mb-2'>\r\n                    <label className='h2 ms-1' htmlFor=\"activities\">ACTIVITY </label>\r\n                    <select onChange={handlerChangeActivity} className=\"ms-2\" name=\"activities\" id=\"activity-select\">\r\n                        <option className='option1'> Choose Activity</option>\r\n                        {nonRepeteadActivities.map((option, index) => (\r\n                            <option key={index} value={option}>\r\n                                {option}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n                <div className='row '>\r\n                    <div className='order col-lg-6 col-sm-12 col-sm-12'>\r\n                        <label className='h2 ms-1'>NAME </label>\r\n                        <br />\r\n                        <button className='btn btnSort btn-outline-light m-1' value=\"atoz\" onClick={handlerChangeAlphabetically}><BsSortAlphaUpAlt /></button>\r\n                        <button className='btn  btnSort btn-outline-light m-1' value=\"ztoa\" onClick={handlerChangeAlphabetically}><BsSortAlphaDownAlt /></button>\r\n                    </div>\r\n                    <div className='order col-lg-6 col-sm-12 col-sm-12'>\r\n                        <label className='h2 ms-1' >POPULATION</label>\r\n                        <br />\r\n                        <button className='btn btnSort btn-outline-light m-1' value=\"menor\" onClick={handlerChangePopulation}><BsSortNumericUpAlt /></button>\r\n                        <button className='btn btnSort btn-outline-light m-1' value=\"mayor\" onClick={handlerChangePopulation}> <BsSortNumericDownAlt /></button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div >\r\n    );\r\n}\r\nexport default Nav;\r\n\r\n","import '../styles/ActivityDetail.css'\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { deleteActivity, getActivities } from '../redux/actionsBack';\r\n// import { changeFlagActivity } from '../redux/actionsFront'\r\nimport { connect } from 'react-redux'\r\nimport { AiOutlineDelete } from \"react-icons/ai\";\r\nimport { Redirect } from 'react-router'\r\nimport { AiFillStar, AiOutlineStar } from \"react-icons/ai\";\r\nimport { IconContext } from 'react-icons/lib';\r\nimport { BsWatch } from \"react-icons/bs\";\r\n\r\n\r\n\r\nexport class ActivityDetail extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            redirection: false\r\n        };\r\n    };\r\n\r\n\r\n\r\n    handlerDelete = (e) => {\r\n        e.preventDefault()\r\n        const { idCountry, id, name } = this.props;\r\n        const promise = deleteActivity(idCountry, id, name);\r\n        if (promise) {\r\n            this.setState({ ...this.state, redirection: true })\r\n            this.props.changeFlagActivity(true)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { redirection } = this.state\r\n        const { idCountry, name, difficulty, duration, season, review } = this.props\r\n\r\n        console.log(this.props)\r\n        const arr = [1, 2, 3, 4, 5]\r\n\r\n        if (redirection) { return <Redirect to={`/countries/${idCountry}`} />; }\r\n        return (\r\n            <div className=\"activityDetail row d-flex justify-content-center\" >\r\n                <div className=\"row\" >\r\n                    <div className='col-lg-3'> <p><span className='span'>Name</span> <br />{name}</p></div>\r\n\r\n                    <div className='col-lg-3'>\r\n                        <span className='span '>Difficulty </span> <br />\r\n                        <div className='d-flex'> {\r\n                            arr.map((index) => (\r\n                                index <= difficulty ?\r\n                                    <IconContext.Provider\r\n                                        value={{ color: 'gold', size: '20px' }}\r\n                                    >\r\n                                        <div key={index}>\r\n                                            <AiFillStar />\r\n                                        </div>\r\n                                    </IconContext.Provider> :\r\n                                    <IconContext.Provider\r\n                                        value={{ color: 'white', size: '20px' }}\r\n                                    >\r\n                                        <div key={index}>\r\n                                            <AiOutlineStar />\r\n                                        </div>\r\n                                    </IconContext.Provider>\r\n\r\n                            ))\r\n                        } </div>\r\n\r\n                    </div >\r\n                    <div className='col-lg-3'> <p><span className='span'>Duration</span><br /> <BsWatch /> {duration} hour </p></div>\r\n                    <div className='col-lg-3'> <p><span className='span'>Season</span><br />{season}</p></div>\r\n\r\n                </div >\r\n                <div className=\"row\" >\r\n                    <div className='col-lg-12'><p className='review'><span className='span'>Review:</span> <span className='review'>{review}</span></p></div>\r\n                    <div className='d-flex justify-content-end'> <Link to=\"/\"><button className='btn col-lg-12 btn-sm btn-outline-warning ' onClick={this.handlerDelete.bind(this)}> Delete Activity </button> </Link>  </div>\r\n                </div>\r\n                <AiOutlineDelete />\r\n            </div >\r\n        );\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getActivities: () => dispatch(getActivities())\r\n        // changeFlagActivity: (boolean) => dispatch(changeFlagActivity(boolean))\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(ActivityDetail);\r\n\r\n","import '../styles/CountryDetail.css'\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getActivities, getCountryById } from '../redux/actionsBack';\r\nimport { cleanFilters, changeFlagReset, changeFlagActivity } from '../redux/actionsFront';\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport { ActivityDetail } from './ActivityDetail';\r\nimport { IconContext } from 'react-icons/lib';\r\nimport { BsPeople } from \"react-icons/bs\";\r\nimport { TbChartAreaLine } from \"react-icons/tb\";\r\nimport { BiWorld } from \"react-icons/bi\";\r\n\r\nclass CountryDetail extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            country: {},\r\n            flag: false\r\n        }\r\n    }\r\n\r\n\r\n\r\n    componentDidMount = async () => {\r\n        const id = this.props.match.params.id;\r\n        const country = await this.props.getCountryById(id)\r\n        if (country) {\r\n            this.setState(() => {\r\n                return {\r\n                    country: country,\r\n                    flag: true\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    componentDidUpdate = async () => {\r\n        const id = this.props.match.params.id;\r\n        if (this.state.flag && this.props.flagActivity === true) {\r\n            const country = await this.props.getCountryById(id)\r\n            this.setState(() => {\r\n                return {\r\n                    country: country,\r\n                    flag: false\r\n                }\r\n            })\r\n            this.props.changeFlagActivity(false)\r\n            return\r\n        }\r\n\r\n        // if (this.props.flagActivity === true) {\r\n        //     console.log(\"im here\")\r\n        //     const country = await this.props.getCountryById(id)\r\n        //     this.setState(() => {\r\n        //         return {\r\n        //             country: country\r\n        //         }\r\n        //     })\r\n        //     this.props.changeFlagActivity(false)\r\n        //     return\r\n        // }\r\n    }\r\n\r\n\r\n\r\n\r\n    handlerFlag = () => {\r\n        this.props.changeFlagActivity(true)\r\n        this.setState(() => {\r\n            return {\r\n                flag: true\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    clean = () => {\r\n        cleanFilters()\r\n        changeFlagReset(true)\r\n    }\r\n\r\n\r\n    render() {\r\n        const { country } = this.state\r\n        return (\r\n            < div className='container-fluid' >\r\n                <div className='row'>\r\n                    <div className='infoCountry col-lg-5 col-sm-12' >\r\n                        <div className='d-flex justify-content-center'>\r\n                            <img src={country.flags} alt={`flag ${country.flags}`} />\r\n                        </div>\r\n                        <div className='description d-flex justify-content-center text-center'>\r\n                            <div className='col-6' >\r\n                                <span className='title' >COUNTRY</span><p> {country.name}  </p>\r\n                                <span className='title' >CODE</span><p> {country.id}</p>\r\n                                <span className='title' >CAPITAL</span> <p>{country.capital}</p>\r\n                            </div>\r\n                            <div className='col-6'>\r\n                                <span className='title' >SUB REGION</span>\r\n                                <p>\r\n                                    <IconContext.Provider value={{ color: 'green', size: '22px' }} >\r\n                                        <BiWorld />\r\n                                    </IconContext.Provider>\r\n                                    {country.subregion}\r\n                                </p>\r\n                                <span className='title' >AREA</span>\r\n                                <p>\r\n                                    <IconContext.Provider value={{ color: 'brown', size: '22px' }} >\r\n                                        <TbChartAreaLine />\r\n                                    </IconContext.Provider>\r\n                                    {country.area} km2\r\n                                </p>\r\n                                <span className='title' >POPULATION</span>\r\n                                <p>\r\n                                    <IconContext.Provider value={{ color: 'white', size: '22px' }}>\r\n                                        <BsPeople />\r\n                                    </IconContext.Provider>\r\n                                    {country.population}\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    <div className='activity col-lg-7 col-sm-12' >\r\n                        <div className='row align-items-start'>\r\n                            <div className='col-lg-8 col-sm-12'> <p id='titleTourist'>Tourist Activities</p> </div>\r\n                            <div className='col-lg-4 col-sm-12 align-self-center'><Link to=\"/addActivity\" > <button className='btn btn-sm btn-outline-light' onClick={this.handlerFlag}>Add new activity</button></Link></ div>\r\n                        </div>\r\n                        {(country[\"activities\"]?.length === 0) ?\r\n                            <div><p className='activityDetail text-center'>This country doesn't have any activities</p></div> :\r\n                            country[\"activities\"]?.map(\r\n                                (activity, index) =>\r\n                                    <ActivityDetail idCountry={country.id}\r\n                                        id={activity.id}\r\n                                        name={activity.name}\r\n                                        difficulty={activity.difficulty}\r\n                                        duration={activity.duration}\r\n                                        season={activity.season}\r\n                                        review={activity.review}\r\n                                        key={index}\r\n                                        changeFlagActivity={changeFlagActivity}\r\n\r\n                                    />\r\n                            )\r\n                        }\r\n                    </div>\r\n                    <div className='d-flex justify-content-center mt-2 mb-2'>\r\n                        <Link className='btn btnContinent btn-sm btn-outline-light m-1' to=\"/\" onClick={this.clean}>Back to Home</Link>\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        country: state.country,\r\n        flagActivity: state.flagActivity\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getActivities: () => dispatch(getActivities()),\r\n        getCountryById: (id) => dispatch(getCountryById(id)),\r\n        cleanFilters: () => dispatch(cleanFilters()),\r\n        changeFlagReset: () => dispatch(changeFlagReset()),\r\n        changeFlagActivity: (boolean) => dispatch(changeFlagActivity(boolean))\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CountryDetail);\r\n\r\n\r\n\r\n\r\n","import '../styles//ActivityForm.css'\r\nimport React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { createActivity } from '../redux/actionsBack'\r\nimport { Link } from 'react-router-dom'\r\nimport { Redirect } from 'react-router'\r\n\r\n\r\nclass ActivityForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: \"\",\r\n            difficulty: \"\",\r\n            duration: \"\",\r\n            season: \"\",\r\n            idCountries: this.props.country.id,\r\n            namesCountries: [],\r\n            review: \"\",\r\n            redirection: false,\r\n            nameCountry: this.props.country.name\r\n        };\r\n    };\r\n\r\n\r\n\r\n\r\n    handlerClean = (e) => {\r\n        this.setState({\r\n            ...this.state,\r\n            name: \"\",\r\n            difficulty: \"\",\r\n            duration: \"\",\r\n            season: \"\",\r\n            idCountries: [],\r\n            namesCountries: [],\r\n            review: \"\"\r\n        })\r\n    }\r\n\r\n\r\n    handlerReview = async (e) => {\r\n        const { value } = e.target;\r\n        this.setState({\r\n            ...this.state,\r\n            review: value\r\n        })\r\n    }\r\n\r\n\r\n    handlerChangeName = (e) => {\r\n        const { value } = e.target\r\n        const regExp = \"^[ a-zA-Z ]+$\"\r\n        if (!value.match(regExp)) {\r\n            alert(\"nombre invalido\");\r\n            this.setState({\r\n                ...this.state,\r\n                name: \"\"\r\n            })\r\n        }\r\n        else {\r\n            this.setState({ ...this.state, name: value })\r\n        }\r\n    }\r\n\r\n    handlerChange = (e) => {\r\n        const { value, name } = e.target\r\n        this.setState({\r\n            ...this.state,\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n\r\n    handlerSubmit = (e) => {\r\n        e.preventDefault();\r\n        // this.props.changeFlagActivity(true)\r\n        this.setState({\r\n            ...this.state,\r\n            idCountries: [...this.state.idCountries, this.props.country.id]\r\n        })\r\n\r\n\r\n        const { name, difficulty, duration, season, idCountries, review } = this.state;\r\n\r\n        const promise = this.props.createActivity({ name, difficulty, duration, season, idCountries, review });\r\n        if (promise) { this.setState({ ...this.state, redirection: true }) }\r\n\r\n    }\r\n\r\n    render() {\r\n        // console.log(\"tuki\" + this.state.idCountries)\r\n        const { name, difficulty, season, duration, review, idCountries, redirection, nameCountry } = this.state\r\n        const seasons = [\"Summer\", \"Autumn\", \"Winter\", \"Spring\"]\r\n        const dificultad = [1, 2, 3, 4, 5]\r\n\r\n\r\n\r\n\r\n\r\n        let arrDuration = [];\r\n        for (let i = 0; i < 24; i++) { arrDuration.push(i) }\r\n\r\n        if (redirection) { return <Redirect to={`/countries/${idCountries}`} />; }\r\n\r\n        return (\r\n            <>\r\n                <p className='createActivity'>Create Activity for {nameCountry} </p>\r\n                <div className=''>\r\n                    <form className=\"formulario row g-2 justify-content-evenly\" onSubmit={this.handlerSubmit}>\r\n                        <div className='col-md-4 col-sm-12 m-1'>\r\n                            <label htmlFor=\"name\" className=\"form-label\">\r\n                                <p>Name</p>    </label>\r\n                            <input className='form-control form-control-sm' id=\"name\" type=\"text\" value={name} onChange={this.handlerChangeName} required />\r\n\r\n                        </div>\r\n                        <div className='col-md-2 col-sm-3  m-1'>\r\n                            <label htmlFor=\"difficulty\" className=\"form-label\">\r\n                                <p>Difficulty</p></label>\r\n                            <select className='form-select form-select-sm' name=\"difficulty\" id=\"difficulty\" value={difficulty} onChange={this.handlerChange} required>\r\n                                <option className='option'>Select option...</option>\r\n                                {dificultad.map((option, index) => (\r\n                                    <option key={index} value={option.value}>\r\n                                        {option}\r\n                                    </option>\r\n                                ))}\r\n                            </select>\r\n\r\n                        </div>\r\n                        <div className='col-md-2 col-sm-3 m-1 ps-5 pi-5'>\r\n                            <label htmlFor=\"duration\" className='form-label'>\r\n                                <p>Hours</p>   </label>\r\n                            <select className='form-select form-select-sm' name=\"duration\" id=\"duration\" value={duration} onChange={this.handlerChange} required>\r\n                                <option> </option>\r\n                                {arrDuration.map((option, index) => (\r\n                                    <option key={index} value={option.value}>\r\n                                        {option}\r\n                                    </option>\r\n                                ))}\r\n                            </select>\r\n\r\n                        </div>\r\n                        <div className='col-md-2 col-sm-3 m-1'>\r\n                            <label htmlFor=\"season\" className='form-label'>\r\n                                <p>Season</p></label>\r\n                            <select className='form-select form-select-sm' type=\"text\" name=\"season\" id=\"season\" value={season} onChange={this.handlerChange} required>\r\n                                <option> </option>\r\n                                {seasons.map((option, index) => (\r\n                                    <option key={index} value={option.value}>\r\n                                        {option}\r\n                                    </option>\r\n                                ))}\r\n                            </select>\r\n\r\n                        </div>\r\n                        {/* <div className='col-lg-12 col-sm-12'> */}\r\n                        <div className=\"reviewForm row \">\r\n                            <label className='form-label col-lg-2 col-sm-12' htmlFor=\"review\"> <p>Review </p></label>\r\n                            <textarea className='form-control col-lg-10 col-sm-12' type=\"text\" id=\"review\" value={review} placeholder=\"Review\" onChange={this.handlerReview} />\r\n\r\n                            <div className=' d-flex justify-content-between m-2'>\r\n                                <button className='btn btn-sm btn-outline-warning' onClick={this.handlerClean}>Clear</button>\r\n                                <button className='btn btn-sm btn-outline-success' type='submit'>Add Activity</button>\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/* \r\n                        <div className='d-flex justify-content-end mb-3'>\r\n                            <button className='btn btn-sm btn-outline-success' type=\"submit\">Add Activity</button> */}\r\n                        {/* <button className='btn btn-sm btn-outline-warning ms-2' onClick={this.handlerClean}>Clear Filters</button> */}\r\n                        {/* </div> */}\r\n\r\n                    </form >\r\n                    <div className='d-flex justify-content-center mt-2'>\r\n                        <Link to=\"/\"><button className='btn btn-sm btn-outline-light'>Back to Home</button></Link>\r\n                    </div>\r\n                    {/* <div> */}\r\n                    {/* <Link to=\"/home\"><button className='btnAction'>Back to Home</button></Link> */}\r\n                    {/* </div> */}\r\n                </div >\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        country: state.country,\r\n        flagActivity: state.flagActivity\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        createActivity: (actividad) => dispatch(createActivity(actividad))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ActivityForm);\r\n\r\n\r\n","import '../styles//ActivityFormMultiple.css'\r\nimport React from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom';\r\nimport { createActivity, getActivities, getAllCountries } from '../redux/actionsBack';\r\nimport { getallidCountries, cleanFilters } from '../redux/actionsFront';\r\nimport { Redirect } from 'react-router'\r\n\r\nclass ActivityFormMultiple extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: \"\",\r\n            difficulty: 0,\r\n            duration: 0,\r\n            season: \"\",\r\n            idCountries: [],\r\n            namesCountries: [],\r\n            review: \"\"\r\n        }\r\n    };\r\n\r\n    componentDidMount = async () => {\r\n        await this.props.getAllCountries();\r\n        await this.props.getallidCountries();\r\n    }\r\n\r\n    handlerClean = () => {\r\n        this.setState({\r\n            ...this.state,\r\n            name: \"\",\r\n            difficulty: \"\",\r\n            duration: \"\",\r\n            season: \"\",\r\n            idCountries: [],\r\n            namesCountries: [],\r\n            review: \"\",\r\n            redirection: false\r\n        })\r\n    }\r\n\r\n    handlerChangeName = (e) => {\r\n        const { value } = e.target\r\n        // const regExp = /^[\\sa-zA-Z\\s]+$/g;\r\n        // if (!value.match(regExp)) {\r\n        //     alert(\"Invalid name, use only a to z | A to Z\");\r\n        //     this.setState({\r\n        //         ...this.state,\r\n        //         name: \"\"\r\n        //     })\r\n        // }\r\n        // else {\r\n        this.setState({ ...this.state, name: value })\r\n        // }\r\n    }\r\n\r\n    handlerReview = async (e) => {\r\n        const { value } = e.target;\r\n        this.setState({\r\n            ...this.state,\r\n            review: value\r\n        })\r\n    }\r\n\r\n\r\n\r\n    handlerAddCountry = (e) => {\r\n        const { value } = e.target\r\n        const { countries } = this.props\r\n        const country = countries.filter(country => {\r\n            return country.id === value\r\n        })\r\n        if (this.state.idCountries.includes(value)) { return }\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            idCountries: [...this.state.idCountries, value],\r\n            namesCountries: [...this.state.namesCountries, country[0].name]\r\n        })\r\n    }\r\n\r\n    handlerDeleteCountry = (e) => {\r\n        e.preventDefault();\r\n        const countriesNames = this.state.namesCountries.filter(nameCountry => {\r\n            return nameCountry !== e.target.value\r\n        })\r\n        this.setState({\r\n            namesCountries: countriesNames\r\n        })\r\n    }\r\n\r\n\r\n    handlerChange = async (e) => {\r\n        e.preventDefault();\r\n        const { value, name } = e.target;\r\n        // uso await para cuando cliqueo en select se guarde instantaneamente en el estado local y pueda enviar el dato completo. \r\n        await this.setState({\r\n            ...this.state,\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n\r\n    handlerSubmit = async (e) => {\r\n        e.preventDefault();\r\n        const { name, difficulty, duration, season, idCountries, review } = this.state;\r\n        const promise = this.props.createActivity({ name, difficulty, duration, season, idCountries, review });\r\n        this.handlerClean();\r\n\r\n        if (promise) { this.setState({ ...this.state, redirection: true }) }\r\n    }\r\n\r\n\r\n    render() {\r\n        const { name, difficulty, season, duration, namesCountries, review, redirection } = this.state\r\n        const { storeIdCountries, countries } = this.props\r\n\r\n        const allCountries = countries.map(country => {\r\n            return { name: country.name, id: country.id }\r\n        })\r\n\r\n\r\n\r\n        const seasons = [\"Summer\", \"Autumn\", \"Winter\", \"Spring\"]\r\n        const dificultad = [1, 2, 3, 4, 5]\r\n\r\n        let arrDuration = [];\r\n        for (let i = 0; i < 12; i++) { arrDuration.push(i) }\r\n\r\n        if (redirection) { return <Redirect to={`/`} />; }\r\n\r\n\r\n        return (\r\n            <>\r\n                <p className='createActivity'>Create Activity</p>\r\n                <form className=\"formulario row g-2 \" onSubmit={this.handlerSubmit}>\r\n                    <div className='row justify-content-evenly'>\r\n                        <div className='col-md-4 col-sm-12 m-1'>\r\n                            <label htmlFor=\"name\" className=\"form-label\">\r\n                                <p>Name</p>    </label>\r\n                            <input className='form-control form-control-sm' id=\"name\" type=\"text\" value={name} onChange={this.handlerChangeName} required />\r\n\r\n                        </div>\r\n                        <div className='col-md-2 col-sm-3  m-1'>\r\n                            <label htmlFor=\"difficulty\" className=\"form-label\">\r\n                                <p>Difficulty</p></label>\r\n                            <select className='form-select form-select-sm' name=\"difficulty\" id=\"difficulty\" value={difficulty} onChange={this.handlerChange} required>\r\n                                <option className='option'>Select option...</option>\r\n                                {dificultad.map((option, index) => (\r\n                                    <option key={index} value={option.value}>\r\n                                        {option}\r\n                                    </option>\r\n                                ))}\r\n                            </select>\r\n\r\n                        </div>\r\n                        <div className='col-md-2 col-sm-3 m-1 ps-5 pi-5'>\r\n                            <label htmlFor=\"duration\" className='form-label'>\r\n                                <p>Hours</p>   </label>\r\n                            <select className='form-select form-select-sm' name=\"duration\" id=\"duration\" value={duration} onChange={this.handlerChange} required>\r\n                                <option> </option>\r\n                                {arrDuration.map((option, index) => (\r\n                                    <option key={index} value={option.value}>\r\n                                        {option}\r\n                                    </option>\r\n                                ))}\r\n                            </select>\r\n\r\n                        </div>\r\n                        <div className='col-md-2 col-sm-3 m-1'>\r\n                            <label htmlFor=\"season\" className='form-label'>\r\n                                <p>Season</p></label>\r\n                            <select className='form-select form-select-sm' type=\"text\" name=\"season\" id=\"season\" value={season} onChange={this.handlerChange} required>\r\n                                <option> </option>\r\n                                {seasons.map((option, index) => (\r\n                                    <option key={index} value={option.value}>\r\n                                        {option}\r\n                                    </option>\r\n                                ))}\r\n                            </select>\r\n\r\n                        </div>\r\n                        {/* <div className='col-lg-12 col-sm-12'> */}\r\n                    </div>\r\n                    <div className=\"reviewForm p-3\">\r\n                        <label className='form-label col-lg-2 col-sm-12' htmlFor=\"review\"> <p>Review </p></label>\r\n                        <textarea className='form-control  col-lg-8 col-sm-12' type=\"text\" id=\"review\" value={review} placeholder=\"Review\" onChange={this.handlerReview} />\r\n                    </div>\r\n\r\n\r\n                    <div className='col-lg-2 col-md-12 col-sm-12 m-3'>\r\n                        <label className='form-label ' htmlFor=\"countries\">    <p>Select Countries to create activity:</p>   </label>\r\n                        <select className='form-select form-select-sm  ' type=\"text\" id=\"idCountries\" name=\"countries\" value={storeIdCountries} onChange={this.handlerAddCountry} required>\r\n                            {allCountries.map((option, index) => (\r\n                                <option key={index} value={option.id}>\r\n                                    {option.name}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n\r\n                    <div className='box col-lg-9 col-md-12 col-sm-12 m-3'>\r\n                        <h2>Countries selected:</h2>\r\n                        <div className='arrCountriesToCreate' >\r\n\r\n                            {namesCountries.map((option, index) => (\r\n                                <button className=\"btn btn-sm btn-outline-warning\" key={index} value={option} onClick={this.handlerDeleteCountry}>   {option} X</button>\r\n                            ))}\r\n\r\n                        </div>\r\n\r\n                    </div >\r\n                    <div className='row m-1'>\r\n                        <div className=' d-flex justify-content-between mt-3 mb-2'>\r\n                            <button className='btn btn-sm btn-outline-warning' onClick={this.handlerClean}>Clear</button>\r\n                            <button className='btn btn-sm btn-outline-success' type='submit'>Add Activity</button>\r\n                        </div>\r\n                    </div>\r\n\r\n                </form >\r\n\r\n                <div className='d-flex justify-content-center mt-3'>\r\n                    <Link to=\"/\"><button className='btn btn-sm btn-outline-light'>Back to Home</button></Link>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        country: state.country,\r\n        countries: state.countries,\r\n        storeIdCountries: state.storeIdCountries,\r\n        activities: state.activities\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        createActivity: (actividad) => dispatch(createActivity(actividad)),\r\n        getAllCountries: () => dispatch(getAllCountries()),\r\n        getallidCountries: () => dispatch(getallidCountries()),\r\n        cleanFilters: () => dispatch(cleanFilters()),\r\n        getActivities: () => dispatch(getActivities()),\r\n        clearFilters: () => dispatch(cleanFilters())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ActivityFormMultiple);\r\n\r\n\r\n","import './App.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { Route } from \"react-router-dom\";\nimport Main from './components/Main';\nimport Nav from './components/Nav'\nimport CountryDetail from './components/CountryDetail'\nimport ActivityForm from './components/ActivityForm';\nimport Paging from './components/Paging'\nimport ActivityFormMultiple from './components/ActivityFormMultiple'\n\nfunction App() {\n  return (\n    <div className=\"container APP\" >\n      <h1>App Country Finder</h1>\n      <div className='row top'>\n        <div className='left col-12 col-sm-12 col-md-3 col-lg-3'>\n          <Route exact path=\"/\" component={Nav} />\n        </div >\n        <div className='right col-12 col-sm-12 col-md-9 col-lg-9'>\n          <Route exact path=\"/\" component={Main} />\n          <Route exact path=\"/\" component={Paging} />\n        </div>\n      </div >\n      <Route exact path=\"/countries/:id\" component={CountryDetail} />\n      <Route exact path=\"/addActivity\" component={ActivityForm} />\n      <Route exact path=\"/createMultipleActivity\" component={ActivityFormMultiple} />\n    </div >\n  );\n}\n\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const arrCountriesByContinent = (paises, continent) => {\r\n    if (!continent) { return paises }\r\n    return paises.filter(country => country.continent === continent)\r\n}\r\n\r\n\r\nexport const countriesByActivity = (paises, actividad) => {\r\n    const currentCountries = []\r\n    const nameCountries = []\r\n    if (paises[0].activities === undefined) { return [] }\r\n    for (let i = 0; i < paises.length; i++) {\r\n        if (paises[i].activities.length) {\r\n            for (let j = 0; j < paises[i].activities.length; j++) {\r\n                if (paises[i].activities[j].name === actividad) {\r\n                    currentCountries.push(paises[i])\r\n                    if (!nameCountries.includes(paises[i].name)) { nameCountries.push(paises[i].name) }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    const flagForNames = []\r\n    const countries = []\r\n    for (const name of nameCountries) {\r\n        for (const country of currentCountries) {\r\n            if (name === country.name && !flagForNames.includes(name)) {\r\n                flagForNames.push(name)\r\n                countries.push(country)\r\n            }\r\n        }\r\n    }\r\n    if (countries.length === 0) {\r\n        return []\r\n    } else {\r\n        return countries;\r\n    }\r\n}\r\n\r\nexport const arrPagesNumber = (paises) => {\r\n    let arrPageNumbers = []\r\n    for (let i = 1; i <= Math.ceil(paises.length / 10); i++) {\r\n        arrPageNumbers.push(i)\r\n    }\r\n    return arrPageNumbers\r\n}\r\n\r\nexport const orderByName = (countries) => {\r\n    let arr = countries.sort((country1, country2) => {\r\n        if (country1.name < country2.name) { return -1 }\r\n        if (country1.name > country2.name) { return 1 }\r\n        return 0\r\n    })\r\n    return arr\r\n}\r\n\r\nexport const arrAlphabetically = (countries, stringOrder) => {\r\n    let arr = orderByName(countries)\r\n    if (stringOrder === \"ztoa\") {\r\n        return arr.reverse()\r\n    }\r\n    return arr\r\n}\r\n\r\nexport const arrPopulation = (countries, stringOrder) => {\r\n    let arr = countries.sort((country1, country2) => {\r\n        return country2.population - country1.population\r\n    })\r\n    if (stringOrder === \"menor\") {\r\n        return arr.reverse()\r\n    }\r\n    return arr\r\n}\r\n\r\nexport const arrIdCountries = (countries) => {\r\n    let idCountries = []\r\n    for (let country of countries) {\r\n        idCountries.push(country.id)\r\n    }\r\n    return idCountries\r\n}","import {\r\n    GET_ALL_COUNTRIES, GET_COUNTRY_BY_NAME, GET_COUNTRY_BY_ID, GET_ACTIVITIES, CREATE_ACTIVITY\r\n} from \"./actionsBack\";\r\n\r\nimport {\r\n    GET_COUNTRIES_PER_CONTINENT, GET_COUNTRIES_PER_ACTIVITY, CHANGE_PAGE_NUMBER, ORDER_ALPHABETICALLY, CLEAN_FILTERS, ORDER_POPULATION, GET_ALL_ID_COUNTRIES, CHANGE_FLAG, CHANGE_FLAG_RESET, CHANGE_FLAG_ACTIVITY\r\n} from \"./actionsFront\";\r\n\r\nimport { arrCountriesByContinent, countriesByActivity, arrPopulation, arrPagesNumber, arrAlphabetically, arrIdCountries } from './controllers/controllersReducer'\r\n\r\n\r\nconst initialState = {\r\n    countries: [],\r\n    country: {},\r\n    countriesFiltered: [],\r\n    activities: [],\r\n    pageNumbers: Array.from({ length: 25 }, (_, i) => i + 1),\r\n    storeIdCountries: [],\r\n    flag: false,\r\n    flagReset: false,\r\n    flagActivity: false\r\n}\r\n\r\n\r\nconst rootReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case GET_ALL_COUNTRIES:\r\n            return {\r\n                ...state,\r\n                countries: action.payload,\r\n                countriesFiltered: action.payload\r\n            }\r\n        case GET_COUNTRY_BY_NAME:\r\n            return {\r\n                ...state,\r\n                countriesFiltered: action.payload,\r\n                pageNumbers: arrPagesNumber(state.countriesFiltered)\r\n            }\r\n        case GET_COUNTRY_BY_ID:\r\n            return {\r\n                ...state,\r\n                country: action.payload\r\n            }\r\n        case GET_COUNTRIES_PER_CONTINENT:\r\n            return {\r\n                ...state,\r\n                countriesFiltered: arrCountriesByContinent(state.countries, action.payload)\r\n            }\r\n        case GET_ACTIVITIES:\r\n            return {\r\n                ...state,\r\n                activities: action.payload\r\n            }\r\n        case GET_COUNTRIES_PER_ACTIVITY:\r\n            return {\r\n                ...state,\r\n                countriesFiltered: countriesByActivity(state.countriesFiltered, action.payload)\r\n            }\r\n        case CREATE_ACTIVITY:\r\n            return {\r\n                ...state,\r\n                activities: [...state.activities, action.payload]\r\n            }\r\n        case CHANGE_PAGE_NUMBER:\r\n            return {\r\n                ...state,\r\n                pageNumbers: arrPagesNumber(state.countriesFiltered)\r\n            }\r\n        case ORDER_ALPHABETICALLY:\r\n            return {\r\n                ...state,\r\n                countriesFiltered: arrAlphabetically(state.countriesFiltered, action.payload),\r\n                pageNumbers: arrPagesNumber(state.countriesFiltered)\r\n            }\r\n        case CLEAN_FILTERS:\r\n            return {\r\n                ...state,\r\n                country: {},\r\n                countriesFiltered: state.countries,\r\n                pageNumbers: Array.from({ length: 25 }, (_, i) => i + 1),\r\n                flag: false\r\n            }\r\n        case ORDER_POPULATION:\r\n            return {\r\n                ...state,\r\n                countriesFiltered: arrPopulation(state.countriesFiltered, action.payload),\r\n                pageNumbers: arrPagesNumber(state.countriesFiltered)\r\n            }\r\n        case GET_ALL_ID_COUNTRIES:\r\n            return {\r\n                ...state,\r\n                storeIdCountries: arrIdCountries(state.countries)\r\n            }\r\n        case CHANGE_FLAG:\r\n            return {\r\n                ...state,\r\n                flag: action.payload\r\n            }\r\n        case CHANGE_FLAG_RESET:\r\n            return {\r\n                ...state,\r\n                flagReset: action.payload\r\n            }\r\n        case CHANGE_FLAG_ACTIVITY:\r\n            return {\r\n                ...state,\r\n                flagActivity: action.payload\r\n            }\r\n        default: return { ...state }\r\n    };\r\n};\r\n\r\n\r\nexport default rootReducer;","import rootReducer from \"./reducer\";\r\nimport { createStore, applyMiddleware } from \"redux\"\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from \"redux-thunk\";\r\n\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeWithDevTools(applyMiddleware(thunk)\r\n    ));\r\n\r\n\r\nexport default store;\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom'; // para moverse entre rutas\nimport { Provider } from 'react-redux'; // Para que funcione redux\nimport store from '../src/redux/store'; // importo store\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}